# Default values for helm-myapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: aeciopires/kube-pires
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 5m
    memory: 5Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 20
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

affinity: {}

# -- Health check on creation pod
readinessProbe:
  # -- Path of health check of application
  path: /health
  # -- Number of seconds after the container has started before readiness
  initialDelaySeconds: 5
  # -- Specifies that the kubelet should perform a liveness probe every N seconds
  periodSeconds: 10
  # -- Number of seconds after which the probe times out
  timeoutSeconds: 5
  # -- Minimum consecutive successes for the probe to be considered successful after having failed
  successThreshold: 1
  # -- When a probe fails, Kubernetes will try failureThreshold times before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe the Pod will be marked Unready
  failureThreshold: 3

# -- Healh check continuos
livenessProbe:
  # -- Path of health check of application
  path: /health
  # -- Number of seconds after the container has started before liveness
  initialDelaySeconds: 5
  # -- Specifies that the kubelet should perform a liveness probe every N seconds
  periodSeconds: 10
  # -- Number of seconds after which the probe times out
  timeoutSeconds: 5
  # -- Minimum consecutive successes for the probe to be considered successful after having failed
  successThreshold: 1
  # -- When a probe fails, Kubernetes will try failureThreshold times before giving up. Giving up in case of liveness probe means restarting the container. In case of readiness probe the Pod will be marked Unready
  failureThreshold: 3

# -- Node selector configurations
nodeSelector: {}

# -- Tolerations configurations
tolerations: []

# -- Configurations of the application. Create configMap and Secret for use in deployment as environment variable
mySecret:
  enabled: true
  mySecretLicenseKey: mysecurepassword2
  mySecretHighSecurity: "false"
  mySecretDistributedTracingEnabled: "true"
